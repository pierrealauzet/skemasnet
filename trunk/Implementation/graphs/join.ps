%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(Join) 8527 8856 4 just-string
200 /Times-Roman choose-font
(GKA) 8426 8104 2 just-string
(SKMN) 8426 7812 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  8426 8136 moveto
  8866 8136 lineto
stroke
14 setlinewidth
[25] 0 setdash
newpath
  8426 7844 moveto
  8866 7844 lineto
stroke
(msgs x 10) 1080 8396 5 just-string
(3) 1080 8396 8 just-string
(nodes) 8886 380 5 just-string
(0.0000) 860 618 5 just-string
(0.2000) 860 1046 5 just-string
(0.4000) 860 1475 5 just-string
(0.6000) 860 1904 5 just-string
(0.8000) 860 2332 5 just-string
(1.0000) 860 2761 5 just-string
(1.2000) 860 3190 5 just-string
(1.4000) 860 3618 5 just-string
(1.6000) 860 4047 5 just-string
(1.8000) 860 4476 5 just-string
(2.0000) 860 4904 5 just-string
(2.2000) 860 5333 5 just-string
(2.4000) 860 5762 5 just-string
(2.6000) 860 6190 5 just-string
(2.8000) 860 6619 5 just-string
(3.0000) 860 7048 5 just-string
(3.2000) 860 7476 5 just-string
(3.4000) 860 7905 5 just-string
(10) 1286 90 7 just-string
(20) 2964 90 7 just-string
(30) 4643 90 7 just-string
(40) 6322 90 7 just-string
(50) 8000 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 618 moveto
  8336 618 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1046 moveto
  8336 1046 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1475 moveto
  8336 1475 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1904 moveto
  8336 1904 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2332 moveto
  8336 2332 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2761 moveto
  8336 2761 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3190 moveto
  8336 3190 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3618 moveto
  8336 3618 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4047 moveto
  8336 4047 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4476 moveto
  8336 4476 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4904 moveto
  8336 4904 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5333 moveto
  8336 5333 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5762 moveto
  8336 5762 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6190 moveto
  8336 6190 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6619 moveto
  8336 6619 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7048 moveto
  8336 7048 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7476 moveto
  8336 7476 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7905 moveto
  8336 7905 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  1286 8106 moveto
  1286 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2964 8106 moveto
  2964 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4643 8106 moveto
  4643 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6322 8106 moveto
  6322 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  8000 8106 moveto
  8000 380 lineto
stroke
[] 0 setdash 8 setlinewidth newpath 1286 881 moveto 1286 881 24 0 360 arc fill
newpath 2964 1792 moveto 2964 1792 24 0 360 arc fill
newpath 4643 3346 moveto 4643 3346 24 0 360 arc fill
newpath 6322 5455 moveto 6322 5455 24 0 360 arc fill
newpath 8000 7755 moveto 8000 7755 24 0 360 arc fill
14 setlinewidth
[] 0 setdash
newpath
  1286 881 moveto
  2964 1792 lineto
  4643 3346 lineto
  6322 5455 lineto
  8000 7755 lineto
stroke
[] 0 setdash 8 setlinewidth 0.125 setgray
newpath 1286 731 moveto 1286 731 24 0 360 arc fill
newpath 2964 1063 moveto 2964 1063 24 0 360 arc fill
newpath 4643 1610 moveto 4643 1610 24 0 360 arc fill
newpath 6322 2371 moveto 6322 2371 24 0 360 arc fill
newpath 8000 3346 moveto 8000 3346 24 0 360 arc fill
14 setlinewidth
[25] 0 setdash
0 setgray
newpath
  1286 731 moveto
  2964 1063 lineto
  4643 1610 lineto
  6322 2371 lineto
  8000 3346 lineto
stroke
showpage
% End of xgraph output
